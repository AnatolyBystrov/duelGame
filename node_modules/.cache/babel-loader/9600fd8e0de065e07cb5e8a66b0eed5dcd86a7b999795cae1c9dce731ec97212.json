{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { detectCollision } from '../utils';\nconst useGameLogic = () => {\n  _s();\n  const [heroes, setHeroes] = useState({\n    hero1: {\n      x: 30,\n      y: 200,\n      radius: 20,\n      dy: 2,\n      color: 'red'\n    },\n    hero2: {\n      x: 770,\n      y: 200,\n      radius: 20,\n      dy: 2,\n      color: 'blue'\n    }\n  });\n  const [bullets, setBullets] = useState({\n    bullets1: [],\n    bullets2: []\n  });\n  const updateHeroes = () => {\n    setHeroes(prevHeroes => {\n      const newHeroes = {\n        ...prevHeroes\n      };\n      Object.keys(newHeroes).forEach(heroKey => {\n        const hero = newHeroes[heroKey];\n\n        // Обновляем положение героев\n        hero.y += hero.dy;\n\n        // Если герой достиг верхней или нижней границы, меняем направление\n        if (hero.y <= hero.radius || hero.y >= 400 - hero.radius) {\n          hero.dy = -hero.dy;\n        }\n      });\n      return newHeroes;\n    });\n  };\n  const fireBullet = (heroKey, direction) => {\n    console.log(`Firing bullet from ${heroKey}`); // Отладка\n    setBullets(prevBullets => ({\n      ...prevBullets,\n      [heroKey]: [...prevBullets[heroKey], {\n        x: heroes[heroKey].x + (direction === 'right' ? heroes[heroKey].radius : -heroes[heroKey].radius),\n        y: heroes[heroKey].y,\n        dx: direction === 'right' ? 5 : -5\n      }]\n    }));\n  };\n  const updateBullets = () => {\n    setBullets(prevBullets => {\n      const newBullets = {\n        ...prevBullets\n      };\n      Object.keys(newBullets).forEach(key => {\n        newBullets[key] = newBullets[key].map(bullet => {\n          bullet.x += bullet.dx; // Обновляем позицию по оси x\n          return bullet;\n        }).filter(bullet => {\n          const targetHero = key === 'bullets1' ? heroes.hero2 : heroes.hero1;\n          if (detectCollision(bullet, targetHero)) {\n            console.log('Collision detected'); // Отладка\n            return false;\n          }\n          return bullet.x > 0 && bullet.x < 800; // Удаляем заклинания, выходящие за границы экрана\n        });\n      });\n      return newBullets;\n    });\n  };\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      updateHeroes();\n      updateBullets();\n    }, 1000 / 60); // 60 кадров в секунду\n\n    return () => clearInterval(intervalId);\n  }, [heroes, bullets]);\n  useEffect(() => {\n    const fireInterval1 = setInterval(() => {\n      fireBullet('bullets1', 'right');\n    }, 1000); // Стрельба с интервалом 1 секунда\n\n    const fireInterval2 = setInterval(() => {\n      fireBullet('bullets2', 'left');\n    }, 1000);\n    return () => {\n      clearInterval(fireInterval1);\n      clearInterval(fireInterval2);\n    };\n  }, [fireBullet]);\n  return {\n    heroes,\n    bullets,\n    fireBullet,\n    setHeroes\n  };\n};\n_s(useGameLogic, \"P1iVEYugYjsErRQaP6gx3N613II=\");\nexport default useGameLogic;","map":{"version":3,"names":["useState","useEffect","detectCollision","useGameLogic","_s","heroes","setHeroes","hero1","x","y","radius","dy","color","hero2","bullets","setBullets","bullets1","bullets2","updateHeroes","prevHeroes","newHeroes","Object","keys","forEach","heroKey","hero","fireBullet","direction","console","log","prevBullets","dx","updateBullets","newBullets","key","map","bullet","filter","targetHero","intervalId","setInterval","clearInterval","fireInterval1","fireInterval2"],"sources":["/Users/anatoliybystrov/Desktop/DuelGame/src/hooks/useGameLogic.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { detectCollision } from '../utils';\n\nconst useGameLogic = () => {\n  const [heroes, setHeroes] = useState({\n    hero1: { x: 30, y: 200, radius: 20, dy: 2, color: 'red' },\n    hero2: { x: 770, y: 200, radius: 20, dy: 2, color: 'blue' },\n  });\n\n  const [bullets, setBullets] = useState({ bullets1: [], bullets2: [] });\n\n  const updateHeroes = () => {\n    setHeroes((prevHeroes) => {\n      const newHeroes = { ...prevHeroes };\n      Object.keys(newHeroes).forEach((heroKey) => {\n        const hero = newHeroes[heroKey];\n        \n        // Обновляем положение героев\n        hero.y += hero.dy;\n\n        // Если герой достиг верхней или нижней границы, меняем направление\n        if (hero.y <= hero.radius || hero.y >= 400 - hero.radius) {\n          hero.dy = -hero.dy;\n        }\n      });\n      return newHeroes;\n    });\n  };\n\n  const fireBullet = (heroKey, direction) => {\n    console.log(`Firing bullet from ${heroKey}`); // Отладка\n    setBullets((prevBullets) => ({\n      ...prevBullets,\n      [heroKey]: [\n        ...prevBullets[heroKey], \n        { x: heroes[heroKey].x + (direction === 'right' ? heroes[heroKey].radius : -heroes[heroKey].radius), \n          y: heroes[heroKey].y, \n          dx: direction === 'right' ? 5 : -5 \n        }\n      ]\n    }));\n  };\n\n  const updateBullets = () => {\n    setBullets((prevBullets) => {\n      const newBullets = { ...prevBullets };\n      Object.keys(newBullets).forEach((key) => {\n        newBullets[key] = newBullets[key].map((bullet) => {\n          bullet.x += bullet.dx; // Обновляем позицию по оси x\n          return bullet;\n        }).filter((bullet) => {\n          const targetHero = key === 'bullets1' ? heroes.hero2 : heroes.hero1;\n          if (detectCollision(bullet, targetHero)) {\n            console.log('Collision detected'); // Отладка\n            return false;\n          }\n          return bullet.x > 0 && bullet.x < 800; // Удаляем заклинания, выходящие за границы экрана\n        });\n      });\n      return newBullets;\n    });\n  };\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      updateHeroes();\n      updateBullets();\n    }, 1000 / 60); // 60 кадров в секунду\n\n    return () => clearInterval(intervalId);\n  }, [heroes, bullets]);\n\n  useEffect(() => {\n    const fireInterval1 = setInterval(() => {\n      fireBullet('bullets1', 'right');\n    }, 1000); // Стрельба с интервалом 1 секунда\n\n    const fireInterval2 = setInterval(() => {\n      fireBullet('bullets2', 'left');\n    }, 1000);\n\n    return () => {\n      clearInterval(fireInterval1);\n      clearInterval(fireInterval2);\n    };\n  }, [fireBullet]);\n\n  return { heroes, bullets, fireBullet, setHeroes };\n};\n\nexport default useGameLogic;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}